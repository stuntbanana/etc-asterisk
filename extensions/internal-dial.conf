;
; subroutine contexts for making calls from the internal system
; specifically used to dial -internal- pbx extensions, not pstn phone calls
;


;; dial the target phone and handle the resulting status
;; ARG1 is the internal extension to dial
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[internal-dial]

; dial it, result goes in DIALSTATUS
exten => s,1,Verbose(INTERNAL Dialing: ${ARG1})
; get the target extension's voicemail box for later if there is one
same  => n,Set(VOICEMAIL_BOX=${PJSIP_ENDPOINT(${ARG1},VOICEMAIL_BOX)})
; call the desired registered endpoint
same  => n,Dial(PJSIP/${ARG1},300)
; jump to the dial status handler
same  => n,Goto(s-${DIALSTATUS},1)

; handle busy response
exten => s-BUSY,1,Verbose(INTERNAL Dial failed due to local BUSY - giving up)
; if the line is busy, go to their voicemail to leave a message
same  => n,Gosub(leave-voicemail,s,1(${VOICEMAIL_BOX},b))
; if there's no voicemail box for this extension, just play the busy signal and quit
same  => n(busysignal),Playtones(busy)
same  => n,Busy(20)

; handle successful answer
exten => s-ANSWER,1,Verbose(INTERNAL Call successfully answered - Hanging up now)
same  => n,Hangup(0)
 
; handle no answer
exten => s-NOANSWER,1,Verbose(INTERNAL Dial failed due to local NOANSWER - giving up)
; if nobody picked up, go to their voicemail to leave a message
same  => n,Gosub(leave-voicemail,s,1(${VOICEMAIL_BOX},u))
; if there's no voicemail box for this extension, just play the 'not answering' message and quit
same  => n,Progress
same  => n,Playback(number-not-answering,noanswer)
same  => n,Congestion(20)

; handle report of channel unavailable
exten => s-CHANUNAVAIL,1,Verbose(INTERNAL Dial failed due to local Channel Unavailable - giving up)
; if the phone isn't registered or something, go to their voicemail to leave a message
same  => n,Gosub(leave-voicemail,s,1(${VOICEMAIL_BOX},u))
; if there's no voicemail box for this extension, just play the 'unavailable' message and quit
same  => n,Progress
same  => n,Playback(unavailable,noanswer)
same  => n,Congestion(20)

; handle bad phone number
exten => s-INVALIDNMBR,1,Verbose(INTERNAL Dial failed due to local Address Incomplete - giving up)
same  => n,Progress
same  => n,Playback(ss-noservice,noanswer)
same  => n,Busy(20)

; handle report of changed number
exten => s-CHANGED,1,Verbose(INTERNAL Dial failed due to local Number Changed - giving up)
same  => n,Playtones(busy)
same  => n,Busy(20)

; handle everything else, including unknown 'HANGUPCAUSE' strings
; process numeric HANGUPCAUSE codes as well
exten => _s-.,1,Set(RC=${IF($[${ISNULL(${HANGUPCAUSE})}]?0:${HANGUPCAUSE})})
same  => n,Goto(${RC},1)

exten => 17,1,Goto(s-BUSY,1)

exten => 18,1,Goto(s-NOANSWER,1)

exten => 22,1,Goto(s-CHANGED,1)

exten => 23,1,Goto(s-CHANGED,1)

exten => 1,1,Goto(s-INVALIDNMBR,1)

exten => 28,1,Goto(s-INVALIDNMBR,1)

exten => _X,1,Goto(dialfailed,1)

exten => _X.,1,Goto(dialfailed,1)

; just print out unhandled dialstatus/hangupcause
exten => dialfailed,1,Verbose(INTERNAL Dial failed due to ${DIALSTATUS} HANGUPCAUSE: ${HANGUPCAUSE})

; catch arbitrary hangups, and annotate in the log that we had a hangup
exten => h,1,Verbose("Call Hangup")
